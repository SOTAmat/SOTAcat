; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs    = seeed_xiao_esp32c3_debug
; Optional: can list multiple defaults like:    default_envs = seeed_xiao_esp32c3_debug, seeed_xiao_esp32c3_release
description     = SOTACAT: Elecraft KX CAT control with SOTAMAT, by AB6D

; Define common items for all environments
[env]
platform = espressif32 @ 6.6.0
framework = espidf
monitor_speed = 115200
monitor_raw = yes
build_flags =
    -DAPP_VERSION=1.0.0
    -DAPP_NAME="SOTACAT"
    -DAPP_DESCRIPTION="CAT control with SOTAMAT"
board_build.partitions = partition_definitions/partitions_singleapp_large.csv
; Rather than use a SPIFFS file system, we embed the web files into the binary directly.
; In the future we may update the app to use a file system such as LittleFS or SPIFFS.
board_build.embed_txtfiles =
    src/web/index.html
    src/web/style.css
    src/web/main.js
    src/web/sclogo.png
    src/web/favicon.ico
    src/web/sota.html
    src/web/sota.js
    src/web/pota.html
    src/web/pota.js
    src/web/settings.html
    src/web/settings.js
    src/web/cat.html
    src/web/cat.js
    src/web/about.html

; ------------------------------------------------------------------------------------------
; ------------------------------------------------------------------------------------------
; Now define specific environments
; ------------------------------------------------------------------------------------------
; ------------------------------------------------------------------------------------------

; ------------------------------------------------------------------------------------------
; Seeed Xiao ESP32-C3 - Single Core, RISC-V, 160MHz, 4MB Flash, 320KB SRAM
; ------------------------------------------------------------------------------------------
[env:seeed_xiao_esp32c3_debug]
board = seeed_xiao_esp32c3
board_build.partitions = partition_definitions/partitions_seeed_xiao_esp32c3_ota.csv
extra_scripts = pre:pio-pre-build-script.py
;                post:pio-post-build-script.py
build_flags =
    ${env.build_flags}
    -DSEEED_XIAO
    -DDEBUG
    -DESP_LOG_DEFAULT_LEVEL=ESP_LOG_VERBOSE
    -DSC_BUILD_TYPE=\"D\"
    -Og ; -Og is optimized for debugging
    -g ; Generate debug info and include debug symbols in the binary
build_unflags = -Os

[env:seeed_xiao_esp32c3_release]
board = seeed_xiao_esp32c3
board_build.partitions = partition_definitions/partitions_seeed_xiao_esp32c3_ota.csv
extra_scripts = pre:pio-pre-build-script.py
                post:pio-post-build-script.py
build_flags =
    ${env.build_flags}
    -DSEEED_XIAO
    -DRELEASE
    -DESP_LOG_DEFAULT_LEVEL=ESP_LOG_INFO
    -DSC_BUILD_TYPE=\"R\"
    -O3 ; Optimize: -Os optmiizes for size, while -O3 optimizes for speed

; ------------------------------------------------------------------------------------------
; Wemos LOLIN32 Line - ESP32-LX6, Dual Core, Xtensa, 160MHz or 240MHz, 4MB Flash, 3520KB SRAM
; ------------------------------------------------------------------------------------------
[env:lolin32_lite_debug]
board = lolin32_lite
extra_scripts = pre:pio-pre-build-script.py
;                post:pio-post-build-script.py
build_flags =
    ${env.build_flags}
    -DLOLIN32_LITE
    -DDEBUG
    -DESP_LOG_DEFAULT_LEVEL=ESP_LOG_VERBOSE
    -DSC_BUILD_TYPE=\"D\"
    -Og ; -Og is optimized for debugging
    -g ; Generate debug info and include debug symbols in the binary
build_unflags = -Os

[env:lolin32_lite_release]
board = lolin32_lite
extra_scripts = pre:pio-pre-build-script.py
                post:pio-post-build-script.py
build_flags =
    ${env.build_flags}
    -DLOLIN32_LITE
    -DRELEASE
    -DESP_LOG_DEFAULT_LEVEL=ESP_LOG_INFO
    -DSC_BUILD_TYPE=\"R\"
    -O3 ; Optimize: -Os optmiizes for size, while -O3 optimizes for speed

; ------------------------------------------------------------------------------------------
; Unexpected Maker TinyPico - ESP32-PICO-D4, Dual Core, Xtensa, 240MHz, 4MB Flash, 4MB PSRAM
; ------------------------------------------------------------------------------------------
[env:um_tinys3_debug]
board = um_tinys3
extra_scripts = pre:pio-pre-build-script.py
;                post:pio-post-build-script.py
build_flags =
    ${env.build_flags}
    -DUM_TINYS3
    -DDEBUG
    -DESP_LOG_DEFAULT_LEVEL=ESP_LOG_VERBOSE
    -DSC_BUILD_TYPE=\"D\"
    -Og ; -Og is optimized for debugging
    -g ; Generate debug info and include debug symbols in the binary
build_unflags = -Os

[env:um_tinys3_release]
board = um_tinys3
extra_scripts = pre:pio-pre-build-script.py
                post:pio-post-build-script.py
build_flags =
    ${env.build_flags}
    -DUM_TINYS3
    -DRELEASE
    -DESP_LOG_DEFAULT_LEVEL=ESP_LOG_INFO
    -DSC_BUILD_TYPE=\"R\"
    -O3 ; Optimize: -Os optmiizes for size, while -O3 optimizes for speed

; ------------------------------------------------------------------------------------------
; Heltec WiFi kit 32 V3 - ESP32-S3FN, Dual Core, Xtensa, 240MHz, 8MB Flash, 512KB SRAM
; ------------------------------------------------------------------------------------------
[env:heltec_wifi_kit_32_V3_debug]
board = heltec_wifi_kit_32_V3
extra_scripts = pre:pio-pre-build-script.py
;                post:pio-post-build-script.py
build_flags =
    ${env.build_flags}
    -DHELTEC_WIFI_V3
    -DDEBUG
    -DESP_LOG_DEFAULT_LEVEL=ESP_LOG_VERBOSE
    -DSC_BUILD_TYPE=\"D\"
    -Og ; -Og is optimized for debugging
    -g ; Generate debug info and include debug symbols in the binary
build_unflags = -Os

[env:heltec_wifi_kit_32_V3_release]
board = heltec_wifi_kit_32_V3
extra_scripts = pre:pio-pre-build-script.py
                post:pio-post-build-script.py
build_flags =
    ${env.build_flags}
    -DHELTEC_WIFI_V3
    -DRELEASE
    -DESP_LOG_DEFAULT_LEVEL=ESP_LOG_INFO
    -DSC_BUILD_TYPE=\"R\"
    -O3 ; Optimize: -Os optmiizes for size, while -O3 optimizes for speed
